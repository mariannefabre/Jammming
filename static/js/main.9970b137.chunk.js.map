{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/Tracklist/Tracklist.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["userAccessToken","SearchBar","props","state","searchTerm","search","bind","handleTermChange","e","this","setState","target","value","onSearch","className","placeholder","onChange","onClick","React","Component","Track","isPlaying","addTrack","removeTrack","renderPreview","onAdd","track","onRemove","controls","src","previewUrl","isRemoval","name","artist","album","renderAction","Tracklist","trackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","title","playlistTracks","onSave","Spotify","getAccessToken","finalUrl","window","location","href","tokenRegex","expirationRegex","match","expirationTime","setTimeout","history","pushState","scope","redirectUrl","url","encodeURIComponent","urlToFetch","fetch","headers","Authorization","response","ok","json","jsonResponse","items","artists","uri","preview_url","Error","console","log","savePlaylist","playlistName","trackURIs","user_id","createPlaylistUrl","method","body","JSON","stringify","createPlaylistResponse","playlistID","addItemsUrl","App","updatePlaylistName","filter","element","length","updatedPlaylistTracks","push","updatedSearchResults","index","indexOf","splice","unshift","forEach","term","results","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9970b137.chunk.js","sourcesContent":["const clientId = \"1189bc0908be4896ae249e6491292789\";\nconst redirectUri = \"https://mariannefabre.github.io/Jammming-React-App/\";\n\nlet userAccessToken;\n\nexport const Spotify = {\n  getAccessToken() {\n    if (userAccessToken) {\n      return;\n    } else {\n      const finalUrl = window.location.href;\n      const tokenRegex = /access_token=([^&]*)/;\n      const expirationRegex = /expires_in=([^&]*)/;\n      if (\n        finalUrl.match(expirationRegex) != null &&\n        finalUrl.match(tokenRegex) != null\n      ) {\n        let expirationTime = finalUrl.match(expirationRegex)[1];\n        userAccessToken = finalUrl.match(tokenRegex)[1];\n        window.setTimeout(() => {\n          userAccessToken = \"\";\n        }, expirationTime * 1000);\n        window.history.pushState(\"Access Token\", null, \"/\");\n      } else if (finalUrl.match(tokenRegex) === null) {\n        const url = \"https://accounts.spotify.com/authorize?\";\n        const responseType = \"token\";\n        const scope = \"playlist-modify-public\";\n        const redirectUrl =\n          url +\n          \"client_id=\" +\n          clientId +\n          (scope ? \"&scope=\" + encodeURIComponent(scope) : \"\") +\n          \"&response_type=\" +\n          responseType +\n          \"&redirect_uri=\" +\n          redirectUri;\n        window.location.href = redirectUrl;\n      }\n    }\n  },\n\n  async search(searchTerm) {\n    this.getAccessToken();\n    const urlToFetch =\n      \"https://api.spotify.com/v1/search?type=track&q=\" + searchTerm;\n    try {\n      const response = await fetch(urlToFetch, {\n        headers: {\n          Authorization: `Bearer ${userAccessToken}`,\n        },\n      });\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        const tracks = jsonResponse.tracks.items.map((track) => {\n          return {\n            name: track.name,\n            artist: track.artists[0].name,\n            album: track.album.name,\n            id: track.id,\n            uri: track.uri,\n            preview_url: track.previewUrl\n          };\n        });\n        return tracks;\n      } else {\n        throw new Error(\"Request failed!\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  },\n\n  async savePlaylist(playlistName, trackURIs) {\n    console.log(userAccessToken);\n    if (!playlistName || !trackURIs) {\n      return false;\n    } else {\n      // Get current user's profile\n      const urlToFetch = \"https://api.spotify.com/v1/me\";\n      try {\n        let response = await fetch(urlToFetch, {\n          headers: {\n            Authorization: `Bearer ${userAccessToken}`,\n          },\n        });\n        if (response.ok) {\n          const jsonResponse = await response.json();\n          const user_id = jsonResponse.id;\n\n          // Create playlist in user's account\n          const createPlaylistUrl =\n            \"\thttps://api.spotify.com/v1/users/\" + user_id + \"/playlists\";\n          try {\n            const createPlaylistResponse = await fetch(createPlaylistUrl, {\n              method: \"post\",\n              headers: {\n                Authorization: `Bearer ${userAccessToken}`,\n              },\n              body: JSON.stringify({\n                name: playlistName,\n              }),\n            });\n            if (createPlaylistResponse.ok) {\n              response = await createPlaylistResponse.json();\n              console.log(response);\n              const playlistID = response.id;\n              // Add items to playlist\n              const addItemsUrl =\n                \"https://api.spotify.com/v1/playlists/\" +\n                playlistID +\n                \"/tracks?uris=\" +\n                trackURIs;\n              try {\n                const addItemsResponse = await fetch(addItemsUrl, {\n                  method: \"post\",\n                  headers: {\n                    Authorization: `Bearer ${userAccessToken}`,\n                    \"Content-type\": \"application/json\",\n                  },\n                });\n                if (addItemsResponse.ok) {\n                  return true;\n                } else {\n                  throw new Error(\"Could not add songs to playlist.\");\n                }\n              } catch (e) {\n                console.log(e);\n                return false;\n              }\n            }\n          } catch (e) {\n            console.log(e);\n            return false;\n          }\n        } else {\n          throw new Error(\"Could not get user profile.\");\n        }\n      } catch (e) {\n        console.log(e);\n        return false;\n      }\n    }\n  },\n};\n","import React from \"react\";\nimport \"./SearchBar.css\";\n\nexport class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: \"\",\n    };\n    this.search = this.search.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n\n  handleTermChange(e) {\n    \n    this.setState({\n      searchTerm: e.target.value\n    })\n  }\n\n  search() {\n    if(this.state.searchTerm){\n      this.props.onSearch(this.state.searchTerm);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input\n          value={this.state.searchTerm}\n          placeholder=\"Enter a song, artist or album\"\n          onChange={this.handleTermChange}\n        />\n        <button className=\"SearchButton\" onClick={this.search}>\n          SEARCH\n        </button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Track.css\";\n\nexport class Track extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaying: false,\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.renderPreview = this.renderPreview.bind(this);\n  }\n  addTrack() {\n    this.props.onAdd(this.props.track);\n  }\n  removeTrack() {\n    this.props.onRemove(this.props.track);\n  }\n\n  renderPreview() {\n    return (\n      <audio controls src={this.props.track.previewUrl}>\n        Your browser does not support the\n        <code>audio</code> element.\n      </audio>\n    );\n  }\n\n  renderAction() {\n    if (this.props.isRemoval === \"true\") {\n      return (\n        <button className=\"Track-action\" onClick={this.removeTrack}>\n          -\n        </button>\n      );\n    } else {\n      return (\n        <button className=\"Track-action\" onClick={this.addTrack}>\n          +\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>\n            {this.props.track.artist} | {this.props.track.album}\n          </p>\n        </div>\n        {this.renderPreview()}\n        {this.renderAction()}\n      </div>\n    );\n  }\n}\n\n/* <iframe\ntitle=\"title\"\nsrc=\"https://open.spotify.com/embed/album/1DFixLWuPkv3KT3TnV35m3\"\nwidth=\"300\"\nheight=\"80\"\nframeborder=\"0\"\nallowtransparency=\"true\"\nallow=\"encrypted-media\"\n></iframe> */\n","import React from \"react\";\nimport { Track } from \"../Track/Track\";\nimport \"./Tracklist.css\";\n\nexport class Tracklist extends React.Component {\n  render() {\n    const trackList = this.props.tracks.map((track) => {\n      return (\n        <Track\n          key={track.id}\n          track={track}\n          onAdd={this.props.onAdd}\n          isRemoval={this.props.isRemoval}\n          onRemove={this.props.onRemove}\n        />\n      );\n    });\n\n    return <div className=\"TrackList\">{trackList}</div>;\n  }\n}\n","import React from \"react\";\nimport \"./SearchResults.css\";\nimport { Tracklist } from \"../Tracklist/Tracklist\";\n\nexport class SearchResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <Tracklist\n          tracks={this.props.searchResults}\n          isRemoval=\"false\"\n          onAdd={this.props.onAdd}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Tracklist } from \"../Tracklist/Tracklist\";\nimport \"./Playlist.css\";\n\nexport class Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n  handleNameChange(e) {\n    this.props.onNameChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input\n          placeholder=\"Add playlist name\"\n          onChange={this.handleNameChange}\n          value={this.props.title}\n        />\n        <Tracklist\n          tracks={this.props.playlistTracks}\n          isRemoval=\"true\"\n          onRemove={this.props.onRemove}\n        />\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>\n          SAVE TO SPOTIFY\n        </button>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\nimport { SearchBar } from \"../SearchBar/SearchBar\";\nimport { SearchResults } from \"../SearchResults/SearchResults\";\nimport { Playlist } from \"../Playlist/Playlist\";\nimport React from \"react\";\n\nimport { Spotify } from \"../../util/Spotify\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"\",\n      playlistTracks: [],\n    };\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    if (\n      this.state.playlistTracks.filter((element) => element.id === track.id)\n        .length > 0\n    ) {\n      return;\n    } else {\n      const updatedPlaylistTracks = this.state.playlistTracks;\n      updatedPlaylistTracks.push(track);\n\n      const updatedSearchResults = this.state.searchResults;\n      const index = updatedSearchResults.indexOf(track);\n      if (index > -1) {\n        updatedSearchResults.splice(index, 1);\n      }\n      this.setState({\n        playlistTracks: updatedPlaylistTracks,\n        searchResults: updatedSearchResults,\n      });\n    }\n  }\n\n  removeTrack(track) {\n    const updatedPlaylistTracks = this.state.playlistTracks;\n    const index = updatedPlaylistTracks.indexOf(track);\n    if (index > -1) {\n      updatedPlaylistTracks.splice(index, 1);\n      const updatedSearchResults = this.state.searchResults;\n      updatedSearchResults.unshift(track);\n      this.setState({\n        playlistTracks: updatedPlaylistTracks,\n        searchResults: updatedSearchResults,\n      });\n    }\n  }\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n  savePlaylist() {\n    const trackURIs = [];\n    this.state.playlistTracks.forEach((track) => {\n      trackURIs.push(track.uri);\n    });\n    if (Spotify.savePlaylist(this.state.playlistName, trackURIs)) {\n      this.setState({\n        playlistName: \"\",\n        playlistTracks: [],\n      });\n    }\n  }\n  async search(term) {\n    const results = await Spotify.search(term);\n    this.setState({\n      searchResults: results,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Create new playlists on Spotify</h1>\n        <SearchBar onSearch={this.search} />\n        <div className=\"App-playlist\">\n          {this.state.searchResults && (\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}\n            />\n          )}\n          <Playlist\n            title={this.state.playlistName}\n            playlistTracks={this.state.playlistTracks}\n            onRemove={this.removeTrack}\n            onNameChange={this.updatePlaylistName}\n            onSave={this.savePlaylist}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}